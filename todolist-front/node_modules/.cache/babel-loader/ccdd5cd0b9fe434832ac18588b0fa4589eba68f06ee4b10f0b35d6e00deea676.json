{"ast":null,"code":"import { API_BASE_URL } from \"./api-config\";\nexport function call(api, method, request) {\n  let headers = new Headers({\n    \"Content-Type\": \"application/json\"\n  });\n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n  if (accessToken && accessToken != null) {\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\n  }\n  let options = {\n    headers: headers,\n    url: API_BASE_URL + api,\n    method: method\n  };\n  if (request) {\n    console.log(\"request >>> \" + request);\n    options.body = JSON.stringify(request);\n  }\n  console.log(\"options  : \" + options);\n  console.log(\"options.body  : \" + options.body);\n  console.log(\"options.url  : \" + options.url);\n  return fetch(options.url, options).then(response => {\n    console.log(\"response.status : \", response);\n    if (response.status === 200) {\n      return response.json();\n    } else if (response.status === 403) {\n      window.location.href = \"/login\";\n    } else {\n      throw Error(response);\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n}\nexport function signin(userDto) {\n  return call(\"/auth/signin\", \"POST\", userDto).then(response => {\n    localStorage.setItem(\"ACCESS_TOKEN\", response.token);\n    console.log(\"[ApiService] signin response : \" + response);\n\n    // todo 화면으로 보내기\n    window.location.href = '/';\n  });\n}\nexport function signout() {\n  localStorage.setItem(\"ACCESS_TOKEN\", null);\n  window.location.href = '/login';\n}\nexport function signup(userDto) {\n  return call(\"/auth/signup\", \"POST\", userDto);\n}","map":{"version":3,"names":["API_BASE_URL","call","api","method","request","headers","Headers","accessToken","localStorage","getItem","append","options","url","console","log","body","JSON","stringify","fetch","then","response","status","json","window","location","href","Error","catch","error","signin","userDto","setItem","token","signout","signup"],"sources":["/Users/oranc/devStudy/todo-front/src/ApiService.js"],"sourcesContent":["import { API_BASE_URL } from \"./api-config\";\n\nexport function call(api, method, request) {\n  let headers = new Headers({\n    \"Content-Type\" : \"application/json\"\n  });\n\n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n\n  if(accessToken && accessToken != null) {\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\n  }\n\n  let options = {\n    headers: headers,\n    url: API_BASE_URL + api,\n    method: method,\n  };\n\n  if (request) {\n    console.log(\"request >>> \" + request);\n    options.body = JSON.stringify(request);\n  }\n\n  console.log(\"options  : \" + options);\n    console.log(\"options.body  : \" + options.body);\n  console.log(\"options.url  : \" + options.url);\n\n  return fetch(options.url, options)\n    .then((response) => {\n        console.log(\"response.status : \", response);\n      if (response.status === 200) {\n        return response.json();\n      } else if (response.status === 403) {\n        window.location.href = \"/login\";\n      } else {\n        throw Error(response);\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n}\n\nexport function signin(userDto) {\n  return call(\"/auth/signin\", \"POST\", userDto).then((response) => {\n      localStorage.setItem(\"ACCESS_TOKEN\", response.token);\n    console.log(\"[ApiService] signin response : \" + response);\n\n    // todo 화면으로 보내기\n      window.location.href = '/';\n  });\n}\n\nexport function signout() {\n    localStorage.setItem(\"ACCESS_TOKEN\", null);\n    window.location.href = '/login';\n}\n\nexport function signup(userDto) {\n   return call(\"/auth/signup\", \"POST\", userDto);\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,cAAc;AAE3C,OAAO,SAASC,IAAIA,CAACC,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAE;EACzC,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAAC;IACxB,cAAc,EAAG;EACnB,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAExD,IAAGF,WAAW,IAAIA,WAAW,IAAI,IAAI,EAAE;IACrCF,OAAO,CAACK,MAAM,CAAC,eAAe,EAAE,SAAS,GAAGH,WAAW,CAAC;EAC1D;EAEA,IAAII,OAAO,GAAG;IACZN,OAAO,EAAEA,OAAO;IAChBO,GAAG,EAAEZ,YAAY,GAAGE,GAAG;IACvBC,MAAM,EAAEA;EACV,CAAC;EAED,IAAIC,OAAO,EAAE;IACXS,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGV,OAAO,CAAC;IACrCO,OAAO,CAACI,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACb,OAAO,CAAC;EACxC;EAEAS,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGH,OAAO,CAAC;EAClCE,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAGH,OAAO,CAACI,IAAI,CAAC;EAChDF,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGH,OAAO,CAACC,GAAG,CAAC;EAE5C,OAAOM,KAAK,CAACP,OAAO,CAACC,GAAG,EAAED,OAAO,CAAC,CAC/BQ,IAAI,CAAEC,QAAQ,IAAK;IAChBP,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEM,QAAQ,CAAC;IAC7C,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAC3B,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,MAAM,IAAIF,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAClCE,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IACjC,CAAC,MAAM;MACL,MAAMC,KAAK,CAACN,QAAQ,CAAC;IACvB;EACF,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;IAChBf,OAAO,CAACC,GAAG,CAACc,KAAK,CAAC;EACpB,CAAC,CAAC;AACN;AAEA,OAAO,SAASC,MAAMA,CAACC,OAAO,EAAE;EAC9B,OAAO7B,IAAI,CAAC,cAAc,EAAE,MAAM,EAAE6B,OAAO,CAAC,CAACX,IAAI,CAAEC,QAAQ,IAAK;IAC5DZ,YAAY,CAACuB,OAAO,CAAC,cAAc,EAAEX,QAAQ,CAACY,KAAK,CAAC;IACtDnB,OAAO,CAACC,GAAG,CAAC,iCAAiC,GAAGM,QAAQ,CAAC;;IAEzD;IACEG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;EAC9B,CAAC,CAAC;AACJ;AAEA,OAAO,SAASQ,OAAOA,CAAA,EAAG;EACtBzB,YAAY,CAACuB,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC;EAC1CR,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;AACnC;AAEA,OAAO,SAASS,MAAMA,CAACJ,OAAO,EAAE;EAC7B,OAAO7B,IAAI,CAAC,cAAc,EAAE,MAAM,EAAE6B,OAAO,CAAC;AAC/C"},"metadata":{},"sourceType":"module","externalDependencies":[]}