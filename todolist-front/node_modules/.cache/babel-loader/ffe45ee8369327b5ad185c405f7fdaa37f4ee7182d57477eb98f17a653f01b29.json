{"ast":null,"code":"import { API_BASE_URL } from \"./api-config\";\nexport function call(api, method, request) {\n  let options = {\n    headers: new Headers({\n      \"content-type\": \"application/json\"\n    }),\n    url: API_BASE_URL + api,\n    method: method\n  };\n  if (request) {\n    console.log(\"request >>> \" + request);\n    options.body = JSON.stringify(request);\n  }\n  console.log(\"options  : \" + options);\n  console.log(\"options.body  : \" + options.body);\n  return fetch(options.url, options).then(response => {\n    console.log(\"response.status : \", response);\n    if (response.status === 200) {\n      return response.json();\n    } else if (response.status === 403) {\n      window.location.href = \"/login\";\n    } else {\n      throw Error(response);\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n}\nexport function signin(userDto) {\n  return call(\"/auth/signin\", \"POST\", userDto).then(response => {\n    localStorage.setItem(\"ACCESS_TOKEN\", response.token);\n    console.log(\"[ApiService] signin response : \" + response);\n\n    // todo 화면으로 보내기\n    window.location.href = '/';\n  });\n}\nexport function signout() {\n  localStorage.setItem(\"ACCESS_TOKEN\", null);\n}","map":{"version":3,"names":["API_BASE_URL","call","api","method","request","options","headers","Headers","url","console","log","body","JSON","stringify","fetch","then","response","status","json","window","location","href","Error","catch","error","signin","userDto","localStorage","setItem","token","signout"],"sources":["/Users/oranc/devStudy/todo-front/src/ApiService.js"],"sourcesContent":["import { API_BASE_URL } from \"./api-config\";\n\nexport function call(api, method, request) {\n  let options = {\n    headers: new Headers({\n      \"content-type\": \"application/json\",\n    }),\n    url: API_BASE_URL + api,\n    method: method,\n  };\n\n  if (request) {\n    console.log(\"request >>> \" + request);\n    options.body = JSON.stringify(request);\n  }\n\n  console.log(\"options  : \" + options);\n    console.log(\"options.body  : \" + options.body);\n\n  return fetch(options.url, options)\n    .then((response) => {\n        console.log(\"response.status : \", response);\n      if (response.status === 200) {\n        return response.json();\n      } else if (response.status === 403) {\n        window.location.href = \"/login\";\n      } else {\n        throw Error(response);\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n}\n\nexport function signin(userDto) {\n  return call(\"/auth/signin\", \"POST\", userDto).then((response) => {\n      localStorage.setItem(\"ACCESS_TOKEN\", response.token);\n    console.log(\"[ApiService] signin response : \" + response);\n\n    // todo 화면으로 보내기\n      window.location.href = '/';\n  });\n}\n\nexport function signout() {\n    localStorage.setItem(\"ACCESS_TOKEN\", null);\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,cAAc;AAE3C,OAAO,SAASC,IAAIA,CAACC,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAE;EACzC,IAAIC,OAAO,GAAG;IACZC,OAAO,EAAE,IAAIC,OAAO,CAAC;MACnB,cAAc,EAAE;IAClB,CAAC,CAAC;IACFC,GAAG,EAAER,YAAY,GAAGE,GAAG;IACvBC,MAAM,EAAEA;EACV,CAAC;EAED,IAAIC,OAAO,EAAE;IACXK,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGN,OAAO,CAAC;IACrCC,OAAO,CAACM,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACT,OAAO,CAAC;EACxC;EAEAK,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGL,OAAO,CAAC;EAClCI,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAGL,OAAO,CAACM,IAAI,CAAC;EAEhD,OAAOG,KAAK,CAACT,OAAO,CAACG,GAAG,EAAEH,OAAO,CAAC,CAC/BU,IAAI,CAAEC,QAAQ,IAAK;IAChBP,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEM,QAAQ,CAAC;IAC7C,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAC3B,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,MAAM,IAAIF,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAClCE,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IACjC,CAAC,MAAM;MACL,MAAMC,KAAK,CAACN,QAAQ,CAAC;IACvB;EACF,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;IAChBf,OAAO,CAACC,GAAG,CAACc,KAAK,CAAC;EACpB,CAAC,CAAC;AACN;AAEA,OAAO,SAASC,MAAMA,CAACC,OAAO,EAAE;EAC9B,OAAOzB,IAAI,CAAC,cAAc,EAAE,MAAM,EAAEyB,OAAO,CAAC,CAACX,IAAI,CAAEC,QAAQ,IAAK;IAC5DW,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEZ,QAAQ,CAACa,KAAK,CAAC;IACtDpB,OAAO,CAACC,GAAG,CAAC,iCAAiC,GAAGM,QAAQ,CAAC;;IAEzD;IACEG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;EAC9B,CAAC,CAAC;AACJ;AAEA,OAAO,SAASS,OAAOA,CAAA,EAAG;EACtBH,YAAY,CAACC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC;AAC9C"},"metadata":{},"sourceType":"module","externalDependencies":[]}